diff --git a/rts/Linker.c b/rts/Linker.c
index 1c76a00..a3cf88d 100644
--- a/rts/Linker.c
+++ b/rts/Linker.c
@@ -58,7 +58,7 @@
         defined(dragonfly_HOST_OS) || defined(netbsd_HOST_OS ) || \
         defined(openbsd_HOST_OS  ) || defined(darwin_HOST_OS ) || \
         defined(kfreebsdgnu_HOST_OS) || defined(gnu_HOST_OS  ) || \
-        defined(solaris2_HOST_OS)))
+        defined(solaris2_HOST_OS)) || defined(linux_android_HOST_OS))
 /* Don't use mmap on powerpc/darwin as the mmap there doesn't support
  * reallocating but we need to allocate jump islands just after each
  * object images. Otherwise relative branches to jump islands can fail
@@ -96,7 +96,7 @@
 #define USE_CONTIGUOUS_MMAP 0
 #endif
 
-#if defined(linux_HOST_OS) || defined(solaris2_HOST_OS) || defined(freebsd_HOST_OS) || defined(kfreebsdgnu_HOST_OS) || defined(dragonfly_HOST_OS) || defined(netbsd_HOST_OS) || defined(openbsd_HOST_OS) || defined(gnu_HOST_OS)
+#if defined(linux_HOST_OS) || defined(linux_android_HOST_OS) || defined(solaris2_HOST_OS) || defined(freebsd_HOST_OS) || defined(kfreebsdgnu_HOST_OS) || defined(dragonfly_HOST_OS) || defined(netbsd_HOST_OS) || defined(openbsd_HOST_OS) || defined(gnu_HOST_OS)
 #  define OBJFORMAT_ELF
 #  include <regex.h>    // regex is already used by dlopen() so this is OK
                         // to use here without requiring an additional lib
@@ -4654,13 +4654,13 @@ static int getSectionKind_ELF( Elf_Shdr *hdr, int *is_bss )
         /* .rodata-style section */
         return SECTIONKIND_CODE_OR_RODATA;
     }
-#ifndef openbsd_HOST_OS
+#if !(defined(openbsd_HOST_OS) || defined(linux_android_HOST_OS))
     if (hdr->sh_type == SHT_INIT_ARRAY
         && (hdr->sh_flags & SHF_ALLOC) && (hdr->sh_flags & SHF_WRITE)) {
        /* .init_array section */
         return SECTIONKIND_INIT_ARRAY;
     }
-#endif /* not OpenBSD */
+#endif /* not OpenBSD or Android */
     if (hdr->sh_type == SHT_NOBITS
         && (hdr->sh_flags & SHF_ALLOC) && (hdr->sh_flags & SHF_WRITE)) {
         /* .bss-style section */
@@ -4934,6 +4934,8 @@ static inline StgBool is_int(nat bits, StgInt32 x) {
 }
 #endif
 
+extern void *_GLOBAL_OFFSET_TABLE_;
+
 /* Do ELF relocations which lack an explicit addend.  All x86-linux
    and arm-linux relocations appear to be of this form. */
 static int
@@ -5047,18 +5048,27 @@ do_Elf_Rel_relocations ( ObjectCode* oc, char* ehdrC,
 #        endif
 
 #        ifdef arm_HOST_ARCH
-         case R_ARM_ABS32:
+         case 2 /* R_ARM_ABS32 */:
          case R_ARM_TARGET1:  // Specified by Linux ARM ABI to be equivalent to ABS32
             *(Elf32_Word *)P += S;
             *(Elf32_Word *)P |= T;
             break;
 
-         case R_ARM_REL32:
+         case 25 /* R_ARM_BASE_PREL */: // ???
+            S = (Elf32_Word)&_GLOBAL_OFFSET_TABLE_;
+            T = 0;
+             // fall through
+         case 3 /* R_ARM_REL32 */:
             *(Elf32_Word *)P += S;
             *(Elf32_Word *)P |= T;
             *(Elf32_Word *)P -= P;
             break;
 
+         case 26 /* R_ARM_GOT_PREL */: // ???
+            *(Elf32_Word *)P += S;
+            *(Elf32_Word *)P -= (Elf32_Word)&_GLOBAL_OFFSET_TABLE_;
+            break;
+
          case R_ARM_CALL:
          case R_ARM_JUMP24:
          {
